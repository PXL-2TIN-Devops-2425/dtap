pipeline {
    agent any
    stages {
        stage('cleanup'){
            steps{
                sshagent(credentials: ['AWS']) {
                    sh '''
                    [ -d ~/.ssh ] || mkdir ~/.ssh && chmod 0700 ~/.ssh
                    ssh-keyscan -t rsa,ECDSA,Ed25519 ec2-107-21-89-82.compute-1.amazonaws.com >> ~/.ssh/known_hosts
                    ssh ubuntu@ec2-107-21-89-82.compute-1.amazonaws.com
                    docker stop `docker ps -q`
                    docker container prune -f
                    docker image prune -af
                    '''
                }
            }
        }
        // https://plugins.jenkins.io/pipeline-aws/
        stage('deploy prod') {
            steps {
                sshagent(credentials: ['AWS']) {
                    sh '''
                    ssh ubuntu@ec2-107-21-89-82.compute-1.amazonaws.com
                    docker pull akikasumiizumiborstpxl/calculator:latest
                    '''
                }
                // Zorg ervoor dat je in deze stage op je remote server de laatste versie van je docker container download a.d.h.v. dockerhub.
            }
        }
        stage('start prod') {
            steps {
                // Zorg ervoor dat de container wordt opgestart op je remote server. Na het opstarten moet je de applicatie kunnen gebruiken op poort 80.
                
                sshagent(credentials: ['AWS']) {
                    sh '''
                    ssh ubuntu@ec2-107-21-89-82.compute-1.amazonaws.com
                    docker run -p 80:3000 -d akikasumiizumiborstpxl/calculator:latest
                    '''
                }
            }
        }
        stage('test prod') {
            steps {
                // Doe een check om te kijken of de applicatie werkt. Voorlopig kan je dit testen met het `curl` commando om te controleren of je een statuscode 200 krijgt als je het IP adres van de `productieserver` bezoekt.
                sh 'curl -I 3.85.124.218'
            }
        }
    }
}
